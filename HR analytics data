import numpy as np
import pandas as pd
import os
os.chdir('C:\\Users\\USER\\Desktop\\DSP14')
train = pd.read_csv('HRTrain.csv')
test = pd.read_csv('HRTest.csv')

#check missing values
train_missing = train.isnull().sum()

#impute missing values
train['education'].value_counts()
train['education'] = np.where(train['education'].isnull(),"Bachelor's",train['education'])
train['education'].isnull().sum()

train['previous_year_rating'].value_counts()
train['previous_year_rating'] = np.where(train['previous_year_rating'].isnull(),
     np.nanmedian(train['previous_year_rating']),train['previous_year_rating'])
train['previous_year_rating'].isnull().sum()

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
train['department'] = le.fit_transform(train['department'])
train['department'].value_counts()

train['region'] = le.fit_transform(train['region'])
train['region'].value_counts()

train['education'] = le.fit_transform(train['education'])
train['education'].value_counts()

train['gender'] = le.fit_transform(train['gender'])
train['gender'].value_counts()

train['recruitment_channel'] = le.fit_transform(train['recruitment_channel'])
train['recruitment_channel'].value_counts()

y = train['is_promoted']
x = train.iloc[:,1:13]

from sklearn.model_selection import train_test_split


x_train, x_test, y_train, y_test = train_test_split(x,y, test_size = 0.20, random_state=123)

from sklearn.neural_network import MLPClassifier

mlp = MLPClassifier(hidden_layer_sizes = (20,20,20), solver = 'adam', verbose=True, max_iter=200)

mlp.fit(x_train, y_train)

preds_mlp = mlp.predict(x_train)


from sklearn.metrics import confusion_matrix
cm_mlp = confusion_matrix(y_train, preds_mlp)
